name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Check SSH version
        run: ssh -V

      - name: Install Dependencies
        run: npm install --prefix client

      - name: Build project
        run: CI=false npm run build --prefix client

      - name: Archive build files
        run: tar -czf build.tar.gz -C client/build .

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: .

      - name: Set permissions to 777
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script:
            sudo mkdir -p /home/ubuntu/jinyuanzhang/weather-app/client/build
            sudo chmod -R 777 /home/ubuntu/jinyuanzhang/weather-app/client/build/

      - name: Upload build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build.tar.gz"
          target: "/home/ubuntu/jinyuanzhang/weather-app/client/build/"

      - name: Extract build files on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/jinyuanzhang/weather-app/client/build
            sudo tar -xzf build.tar.gz --overwrite 
            sudo systemctl reload nginx
            sudo rm build.tar.gz
